.container {
	display: grid;
	grid-template-columns: 1fr 2fr 1fr;
	grid-template-rows: 50px 50px;
	grid-gap: 3px;

	/*///////////////////////////////////////*/
	
	grid-template-columns: repeat(3, 1fr);
	/*same as 1fr 1fr 1fr*/
		
	grid-template-rows: repeat(2, 50px);
	/*same as 50px 50px*/

	/*the short hand is:*/
	grid-template: repeat(2, 50px) / repeat(3, 1fr);
}

	/*////////////////////////////////////////*/

.header {
	grid-column-start: 1;
	grid-column-end: 3;
	/*this will cause the first item to take up
	the entire top row when 2 columns declared,
	3 as |  |  | counting both sides of columns*/

	/*the short hand is:*/
	grid-column: 1 / 3;
	grid-column: 1 / -1;
	/*does the same, using -1 means it will always*/
	/*target last column, good to use when you don't*/
	/*know how many columns you will have in grid*/


	/*could do the same with .footer so it bookends*/
}

	/*//////////////////////////////////////////*/

	/*how to make templates easily*/
	/*using a . will give an area a blank space*/

.container {
	 grid-template-areas: 
        "h h h h h h h h h h h h"
        "m c c c c c c c c c c c"
        "f f f f f f f f f f f f";
}
.header {
    grid-area: h;
}

.menu {
    grid-area: m;
}

.content {
    grid-area: c;
}

.footer {
    grid-area: f;
}


	/*//////////////////////////////////////////*/

.container {
	grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
	/*this will help when resizing so no blank space is left*/
	grid-auto-rows: 100px;
	/*this will make all rows 100px*/
}

	/*//////////////////////////////////////////*/

.container {
	grid-auto-flow: dense;
	/*source order independence*/
}

	/*///////////////////////////////////////////*/

.container {
	justify-content: space-around;
	align-content: center;
	/*lots of options here for positioning*/
	/*extremely useful*/
}

	/*////////////////////////////////////////////*/

.container {
	justify-items: center;
	align-items: center;
	justify-self: center;
	align-self: center;
	/*more ways to push items to space*/
}

	/*/////////////////////////////////////////////*/

	/*auto-fit will stretch item to size of space*/
	/*auto-fill will add blank space, not resize*/

	/*/////////////////////////////////////////////*/

article {
    display: grid;
    grid-template-columns: 80px 1fr 80px;
}

article > * {
    grid-column: 2;
    min-width: 0;
}

article > figure {
    grid-column: 1 / -1;
    margin: 20px 20px;
}

	/*simple way to layout an article*/